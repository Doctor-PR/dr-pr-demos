name: Fix PR

on:
  workflow_dispatch:
    inputs:
      base_branch_name:
        required: true
        type: string

      base_pull_request_number:
        required: true
        type: string

      review_id:
        required: true
        type: string

      aider_message:
        required: true
        type: string

      author_user_name:
        required: true
        type: string

jobs:
  fix-pr:
    runs-on: ubuntu-latest
    env:
      AIDER_YES_ALWAYS: true
      AIDER_AUTO_COMMITS: true
      AIDER_CACHE_PROMPTS: true
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      AIDER_MESSAGE: ${{inputs.aider_message}}
      GIT_USER_NAME: Fix PR[bot]
      GIT_USER_EMAIL: 201051420+fix-pr[bot]@users.noreply.github.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global user.email ${{env.GIT_USER_EMAIL}}
          git config --global user.name ${{env.GIT_USER_NAME}}
      - name: Install Aider
        run: curl -LsSf https://aider.chat/install.sh | sh
      - name: Run Aider
        id: run_aider
        run: |
          # Create a directory outside the Git repository
          mkdir -p /tmp/aider
          # Run aider and capture its output to a file outside the repo while also displaying it
          aider | tee /tmp/aider/output.txt
          # Store the output as a step output
          echo "aider_output<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/aider/output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Extract Commit Message
        id: extract_commit
        run: |
          # Simply get the last line and extract the commit message
          LAST_LINE=$(tail -n 1 /tmp/aider/output.txt)
          COMMIT_MESSAGE=$(echo "$LAST_LINE" | sed -E 's/Commit [a-f0-9]* (.*)/\1/' || echo "Fix from Aider")
          # Remove any quotes that might cause issues
          COMMIT_MESSAGE=$(echo "$COMMIT_MESSAGE" | tr -d '"')
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          # For debugging
          echo "Extracted commit message: $COMMIT_MESSAGE"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          base: ${{inputs.base_branch_name}}
          branch: "${{inputs.base_branch_name}}-fix-${{inputs.review_id}}"
          author: "${{env.GIT_USER_NAME}} <${{env.GIT_USER_EMAIL}}>"
          committer: "${{env.GIT_USER_NAME}} <${{env.GIT_USER_EMAIL}}>"
          reviewers: ${{inputs.author_user_name}}
          title: ${{steps.extract_commit.outputs.commit_message}}
          body: |
            Address [review comment][1] for PR #${{inputs.base_pull_request_number}}
            Auto-generated by ${{env.GIT_USER_NAME}}

            [1]: https://github.com/${{github.repository}}/pull/${{inputs.base_pull_request_number}}#pullrequestreview-${{inputs.review_id}}
